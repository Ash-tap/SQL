/**For this project, I downloaded Spotify Music data from Kaggle
I then created a table to insert the data.
Afterwards I did analytics on the data.**/

CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL );


SELECT * FROM BIT_DB.Spotifydata LIMIT 10;

/** What are the top 10 songs based on popularity?**/
SELECT artist_name,track_name, popularity
FROM BIT_DB.Spotifydata
ORDER BY popularity DESC LIMIT 10;

/** Which artists released the longest song?**/
SELECT artist_name,track_name,duration_ms
FROM BIT_DB.Spotifydata
ORDER BY duration_ms DESC
LIMIT 5;

/** What's the average danceability for the 10 most popular songs?**/
SELECT AVG(danceability)
FROM BIT_DB.Spotifydata
WHERE id IN (SELECT id FROM BIT_DB.Spotifydata ORDER BY popularity DESC LIMIT 10);

/**What's the average length for the 10 most popular songs?**/
SELECT AVG(duration_ms)
FROM BIT_DB.Spotifydata
WHERE id IN (SELECT id FROM BIT_DB.Spotifydata ORDER BY popularity DESC LIMIT 10);

/**What are the top 5 loudest songs?**/
SELECT artist_name, track_name, loudness
FROM BIT_DB.Spotifydata 
ORDER BY loudness DESC LIMIT 10;

/**Which songs are highly instrumental?**/
SELECT artist_name, track_name,instrumentalness
FROM BIT_DB.Spotifydata
ORDER BY instrumentalness DESC LIMIT 10;
